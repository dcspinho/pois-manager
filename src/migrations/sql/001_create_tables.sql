-- Opening Hours Table
CREATE TABLE IF NOT EXISTS openingHours (
    scheduleId INTEGER PRIMARY KEY,
    weekDay INTEGER,  -- Day of the week (0 for Sunday, 1 for Monday, etc.)
    openTime TIME,  -- Opening time
    closeTime TIME,  -- Closing time
    holiday BOOLEAN DEFAULT FALSE  -- True if the day is a holiday
);

-- POI Table
CREATE TABLE IF NOT EXISTS poi (
    poiId INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status VARCHAR(50),  -- Status of the petrol station (ONLINE, OFFLINE)
    country VARCHAR(100),  -- Country of the station
    zipCode VARCHAR(10),  -- Postal code
    street VARCHAR(100),  -- Street name
    houseNumber VARCHAR(10),  -- House number
    openingHoursId INTEGER REFERENCES openingHours(scheduleId)  -- Reference to opening hours
);

-- Product Price Table
CREATE TABLE IF NOT EXISTS productPrice (
    productPriceId INTEGER PRIMARY KEY,
    currency VARCHAR(3),  -- Currency code (e.g., EUR, USD)
    price DECIMAL(10, 2)  -- Price of the product in the specified currency
);

-- Fuel Product Table
CREATE TABLE IF NOT EXISTS fuelProduct (
    productId INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    productName VARCHAR(50),  -- Name of the fuel product, e.g., SUPER E10, Diesel
    productPriceId INTEGER REFERENCES productPrice(productPriceId)  -- Reference to the Product Price table
);

-- Pump Table
CREATE TABLE IF NOT EXISTS pump (
    pumpId UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    pumpName VARCHAR(50),  -- Name or number of the pump
    poiId INTEGER REFERENCES poi(poiId),  -- Reference to the POI table
    fuelProductId INTEGER REFERENCES fuelProduct(productId)  -- Reference to the Fuel Product table
);

-- Currency Rate Table
CREATE TABLE IF NOT EXISTS currencyRate (
    currency VARCHAR(3) PRIMARY KEY,  -- Currency code (e.g., EUR, USD)
    rate DECIMAL(10, 4),  -- Exchange rate
    updatedAt TIMESTAMP DEFAULT NOW()  -- Last update timestamp
);
